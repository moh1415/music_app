{"version":3,"sources":["components/SearchResult.js"],"names":["entities","Entities","require","XmlEntities","liVariants","open","y","opacity","transition","stiffness","velocity","closed","ulVariants","staggerChildren","delayChildren","staggerDirection","SearchResult","_ref","videos","_useCycle","useCycle","_useCycle2","Object","D_prog_react_native_react_mus_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","isOpen","setisOpen","_useContext","useContext","GlobalContext","_useContext2","D_prog_react_native_react_mus_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_0__","dispatch","handleClick","video","data","id","videoId","title","decode","snippet","channelTitle","maxThumbnail","concat","sdThumbnail","type","React","useEffect","setTimeout","console","log","renderResult","map","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","framer_motion__WEBPACK_IMPORTED_MODULE_3__","div","variants","key","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","alignItems","button","onClick","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","className","style","width","height","marginRight","alt","src","thumbnails","high","url","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","primary","secondary","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","component","variant","color","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","initial","animate"],"mappings":"yNAmBMA,EAAW,IAAIC,EAFJC,EAAQ,KAAiBC,aAIpCC,EAAa,CACjBC,KAAM,CACJC,EAAG,EACHC,QAAS,EACTC,WAAY,CACVF,EAAG,CAAEG,UAAW,IAAMC,UAAW,OAGrCC,OAAQ,CACNL,EAAG,GACHC,QAAS,EACTC,WAAY,CACVF,EAAG,CAAEG,UAAW,QAKhBG,EAAa,CACjBP,KAAM,CACJG,WAAY,CAAEK,gBAAiB,IAAMC,cAAe,KAEtDH,OAAQ,CACNH,WAAY,CAAEK,gBAAiB,IAAME,kBAAmB,KAiF7CC,UA7EM,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OAAaC,EACPC,aAAS,GAAO,GADTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5BK,EAD4BH,EAAA,GACpBI,EADoBJ,EAAA,GAAAK,EAGZC,qBAAWC,KAHCC,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAAJ,OAAAQ,EAAA,EAAAR,CAAAO,EAAA,QAGxBE,EAHwBF,EAAA,GAQ7BG,EAAc,SAAAC,GAJW,IAAAC,IAMN,CACrBC,GAAIF,EAAME,GAAGC,QACbC,MAAOrC,EAASsC,OAAOL,EAAMM,QAAQF,OACrCG,aAAcxC,EAASsC,OAAOL,EAAMM,QAAQC,cAC5CC,aAAY,8BAAAC,OAAgCT,EAAME,GAAGC,QAAzC,sBACZO,YAAW,8BAAAD,OAAgCT,EAAME,GAAGC,QAAzC,mBAVbL,EAAS,CAAEa,KAAM,yBAA0BL,QAASL,KAetDW,IAAMC,UAAU,WACdC,WAAW,aAAU,KACrBC,QAAQC,IAAI,eAAgBzB,GAC5BC,GAAU,IACT,IAEH,IAAMyB,EAAehC,EAAOiC,IAAI,SAAAlB,GAAS,IAC/BM,EAAYN,EAAZM,QAER,OADAS,QAAQC,IAAI,uBAEVG,EAAAC,EAAAC,cAACC,EAAA,EAAOC,IAAR,CAAYC,SAAUrD,EAAYsD,IAAKzB,EAAME,GAAGC,SAC9CgB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,WAAW,aACXC,QAAM,EACNC,QAAS,kBAAM9B,EAAYC,KAI3BmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,UAAU,cACVC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,YAAa,QACrDC,IAAK/B,EAAQF,MACbkC,IAAKhC,EAAQiC,WAAWC,KAAKC,OAGjCtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,QAAS5E,EAASsC,OAAOC,EAAQF,OACjCwC,UACEzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyB,SAAA,KACE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRC,MAAM,eAEL3C,EAAQC,kBAMnBY,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,SAKN,OACE/B,EAAAC,EAAAC,cAACC,EAAA,EAAOC,IAAR,CACEC,SAAU7C,EACVwE,SAAS,EACTC,QAAS7D,EAAS,OAAS,UAE1B0B","file":"static/js/10.24e88115.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { motion, useCycle } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\n\r\nimport youtubeSearch from \"../apis/youtubeSearch\";\r\nimport \"../style.css\";\r\nimport {\r\n  ListItem,\r\n  Typography,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Divider,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\n\r\nconst Entities = require(\"html-entities\").XmlEntities;\r\n\r\nconst entities = new Entities();\r\n\r\nconst liVariants = {\r\n  open: {\r\n    y: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      y: { stiffness: 1000, velocity: -100 }\r\n    }\r\n  },\r\n  closed: {\r\n    y: 50,\r\n    opacity: 0,\r\n    transition: {\r\n      y: { stiffness: 1000 }\r\n    }\r\n  }\r\n};\r\n\r\nconst ulVariants = {\r\n  open: {\r\n    transition: { staggerChildren: 0.07, delayChildren: 0.2 }\r\n  },\r\n  closed: {\r\n    transition: { staggerChildren: 0.05, staggerDirection: -1 }\r\n  }\r\n};\r\n\r\nconst SearchResult = ({ videos }) => {\r\n  const [isOpen, setisOpen] = useCycle(false, true);\r\n\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n  const setCurrentVideoSnippet = data => {\r\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\r\n  };\r\n\r\n  const handleClick = video => {\r\n    // set all the info of current clicked video in this object\r\n    setCurrentVideoSnippet({\r\n      id: video.id.videoId,\r\n      title: entities.decode(video.snippet.title),\r\n      channelTitle: entities.decode(video.snippet.channelTitle),\r\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\r\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\r\n      // this is the url of the max resolution of thumbnail\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {}, 100);\r\n    console.log(\"isopen cycle\", isOpen);\r\n    setisOpen(true);\r\n  }, []);\r\n\r\n  const renderResult = videos.map(video => {\r\n    const { snippet } = video;\r\n    console.log(\"render result times\");\r\n    return (\r\n      <motion.div variants={liVariants} key={video.id.videoId}>\r\n        <ListItem\r\n          alignItems=\"flex-start\"\r\n          button\r\n          onClick={() => handleClick(video)}\r\n          // component={Link}\r\n          // to={{pathname: \"/play\", search:`?id=${video.id.videoId}`}}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar\r\n              className=\"searchThumb\"\r\n              style={{ width: \"60px\", height: \"60px\", marginRight: \"15px\" }}\r\n              alt={snippet.title}\r\n              src={snippet.thumbnails.high.url}\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={entities.decode(snippet.title)}\r\n            secondary={\r\n              <>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  {snippet.channelTitle}\r\n                </Typography>\r\n              </>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n      </motion.div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <motion.div\r\n      variants={ulVariants}\r\n      initial={false}\r\n      animate={isOpen ? \"open\" : \"closed\"}\r\n    >\r\n      {renderResult}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n"],"sourceRoot":""}